import importlib
import logging

from infra import infra

log = logging.getLogger("GEN")

# üî∏ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∫–ª–∞—Å—Å–æ–≤ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Å—Ç–∞–Ω—Å–æ–≤
def load_signal_rule_instances():
    loaded = 0

    log.info(f"[RULE_LOADER] SIGNAL_CONFIGS: {len(infra.signal_configs)}")

    for signal in infra.signal_configs:
        rule_name = signal.get("rule")
        log.info(f"[RULE_LOADER] –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–∞: {signal.get('name', '<unnamed>')} ‚Üí rule={rule_name}")

        if not rule_name or rule_name not in infra.rule_definitions:
            log.warning(f"[RULE_LOADER] –ü—Ä–æ–ø—É—â–µ–Ω —Å–∏–≥–Ω–∞–ª '{signal.get('name')}' ‚Äî –Ω–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ '{rule_name}'")
            continue

        rule_def = infra.rule_definitions[rule_name]
        module_name = rule_def["module_name"]
        class_name = rule_def["class_name"]

        try:
            module = importlib.import_module(f"rule_engine.{module_name}")
            rule_class = getattr(module, class_name)
            log.info(f"[RULE_LOADER] –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –∫–ª–∞—Å—Å: {module_name}.{class_name}")
        except Exception as e:
            log.exception(f"[RULE_LOADER] ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ {module_name}.{class_name}: {e}")
            continue

        timeframe = signal.get("timeframe")
        signal_id = signal.get("id")

        for symbol in infra.enabled_tickers:
            key = (rule_name, symbol, timeframe)
            log.info(f"[RULE_LOADER] –°–æ–∑–¥–∞–Ω–∏–µ: {class_name}(symbol='{symbol}', timeframe='{timeframe}', signal_id={signal_id})")
            try:
                instance = rule_class(symbol=symbol, timeframe=timeframe, signal_id=signal_id)
                infra.rule_instances[key] = instance
                loaded += 1
            except Exception as e:
                log.exception(f"[RULE_LOADER] ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Å—Ç–∞–Ω—Å–∞ {class_name} –¥–ª—è {symbol}/{timeframe}: {e}")

    log.info(f"[RULE_LOADER] –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–Ω—Å—Ç–∞–Ω—Å–æ–≤ –ø—Ä–∞–≤–∏–ª: {loaded}")