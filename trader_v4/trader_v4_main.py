# trader_v4_main.py ‚Äî –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä —Ñ–æ–Ω–æ–≤–æ–≥–æ –≤–æ—Ä–∫–µ—Ä–∞ Trader v4 (–∫–æ–Ω—Ñ–∏–≥, –ø–æ–ª–∏—Ç–∏–∫–∏ TP/SL winners, Bybit-—Å–∏–Ω–∫) - 28 –æ–∫—Ç—è–±—Ä—è

# üî∏ –ò–º–ø–æ—Ä—Ç—ã
import asyncio
import logging

from trader_infra import setup_logging, setup_pg, setup_redis_client
from trader_config import (
    init_trader_config_state,
    config_event_listener,
    strategy_state_listener,
    config,
)
from bybit_sync import run_bybit_private_ws_sync_loop, run_bybit_rest_resync_job
from trader_position_opener import run_trader_position_opener
from bybit_processor import run_bybit_processor
from bybit_activator import run_bybit_activator
from bybit_auditor import run_bybit_auditor

# üî∏ –õ–æ–≥–≥–µ—Ä –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
log = logging.getLogger("TRADER_MAIN")

# üî∏ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞ (–∂—ë—Å—Ç–∫–æ –≤ –∫–æ–¥–µ)
CONFIG_LISTENER_START_DELAY_SEC = 1.0
STRATEGY_STATE_START_DELAY_SEC = 1.0
BYBIT_WS_START_DELAY_SEC = 10.0
BYBIT_RESYNC_START_DELAY_SEC = 20.0
BYBIT_RESYNC_INTERVAL_SEC = 600.0
POS_OPENER_START_DELAY_SEC = 30.0
BYBIT_PROC_START_DELAY_SEC = 30.0
BYBIT_ACTIVATOR_START_DELAY_SEC = 45.0
BYBIT_AUDITOR_START_DELAY_SEC = 45.0

# üî∏ –û–±—ë—Ä—Ç–∫–∞ —Å –∞–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º –¥–ª—è –≤–æ—Ä–∫–µ—Ä–æ–≤
async def run_safe_loop(coro_factory, label: str):
    while True:
        try:
            log.info(f"[{label}] –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏")
            await coro_factory()
        except Exception:
            log.exception(f"[{label}] ‚ùå –£–ø–∞–ª —Å –æ—à–∏–±–∫–æ–π ‚Äî –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥")
            await asyncio.sleep(5)

# üî∏ –û–±—ë—Ä—Ç–∫–∞: –∑–∞–ø—É—Å–∫ –¥–æ–ª–≥–æ–∂–∏–≤—É—â–µ–≥–æ –≤–æ—Ä–∫–µ—Ä–∞ —Å –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–º —Å—Ç–∞—Ä—Ç–æ–º
async def run_with_delay(coro_factory, label: str, start_delay: float = 0.0):
    if start_delay and start_delay > 0:
        log.info(f"[{label}] –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–π —Å—Ç–∞—Ä—Ç –Ω–∞ {start_delay:.1f} —Å–µ–∫")
        await asyncio.sleep(start_delay)
    await run_safe_loop(coro_factory, label)

# üî∏ –û–±—ë—Ä—Ç–∫–∞: –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è ¬´—Ç–∏–∫-–∑–∞–¥–∞—á–∞¬ª
async def run_periodic(coro_factory, label: str, start_delay: float = 0.0, interval: float = 60.0):
    if start_delay and start_delay > 0:
        log.info(f"[{label}] –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–π —Å—Ç–∞—Ä—Ç —Ç–∏–∫-–∑–∞–¥–∞—á–∏ –Ω–∞ {start_delay:.1f} —Å–µ–∫")
        await asyncio.sleep(start_delay)
    while True:
        try:
            log.info(f"[{label}] –ó–∞–ø—É—Å–∫ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –∑–∞–¥–∞—á–∏")
            await coro_factory()
            log.info(f"[{label}] –ó–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ ‚Äî —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ {interval:.1f} —Å–µ–∫")
        except Exception:
            log.exception(f"[{label}] ‚ùå –û—à–∏–±–∫–∞ ‚Äî –ø–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ {interval:.1f} —Å–µ–∫")
        await asyncio.sleep(interval)

# üî∏ –ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞
async def main():
    setup_logging()
    log.info("üì¶ –ó–∞–ø—É—Å–∫ –≤–æ—Ä–∫–µ—Ä–∞ trader v4")

    try:
        await setup_pg()
        await setup_redis_client()
        log.info("üß© –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    except Exception:
        log.exception("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤–Ω–µ—à–Ω–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤")
        return

    try:
        # –±–∞–∑–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: —Ç–∏–∫–µ—Ä—ã, —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏, —Å–≤—è–∑–∏, –∫—ç—à winners (+meta)
        await init_trader_config_state()
        log.info("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç—Ä–µ–π–¥–µ—Ä–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")

        # —Å—Ç–∞—Ä—Ç–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª–Ω–æ–π –ø–æ–ª–∏—Ç–∏–∫–∏ TP/SL –¥–ª—è —Ç–µ–∫—É—â–∏—Ö winners
        await config.reload_all_policies_for_winners()
        log.info(
            "üè∑Ô∏è –°—Ç–∞—Ä—Ç–æ–≤—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã: winners=%d, policies=%d, min_dep=%s",
            len(config.trader_winners),
            len(config.strategy_policies),
            config.trader_winners_min_deposit,
        )
    except Exception:
        log.exception("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏/–ø–æ–ª–∏—Ç–∏–∫")
        return

    log.info("üöÄ –ó–∞–ø—É—Å–∫ –≤–æ—Ä–∫–µ—Ä–æ–≤")

    await asyncio.gather(
        # —Å–ª—É—à–∞—Ç–µ–ª—å Pub/Sub –∞–ø–¥–µ–π—Ç–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (—Ç–∏–∫–µ—Ä—ã/—Å—Ç—Ä–∞—Ç–µ–≥–∏–∏)
        run_with_delay(
            config_event_listener,
            "TRADER_CONFIG_PUBSUB",
            start_delay=CONFIG_LISTENER_START_DELAY_SEC,
        ),
        # —Å–ª—É—à–∞—Ç–µ–ª—å —Å—Ç—Ä–∏–º–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–π
        run_with_delay(
            strategy_state_listener,
            "TRADER_STRATEGY_STATE",
            start_delay=STRATEGY_STATE_START_DELAY_SEC,
        ),
        # –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ä–¥–µ—Ä–æ–≤ –ø–æ —Å–æ–±—ã—Ç–∏—è–º opened
        run_with_delay(
            run_trader_position_opener,
            "TRADER_POS_OPENER",
            start_delay=POS_OPENER_START_DELAY_SEC,
        ),
        # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—á–µ—Ä–µ–¥–∏ –æ—Ä–¥–µ—Ä–æ–≤ –¥–ª—è –±–∏—Ä–∂–∏
        run_with_delay(
            run_bybit_processor,
            "BYBIT_PROCESSOR",
            start_delay=BYBIT_PROC_START_DELAY_SEC,
        ),
        # –ø—Ä–∏–≤–∞—Ç–Ω—ã–π WS-—Å–∏–Ω–∫ Bybit (read-only)
        run_with_delay(
            run_bybit_private_ws_sync_loop,
            "BYBIT_SYNC",
            start_delay=BYBIT_WS_START_DELAY_SEC,
        ),
        # –∞–∫—Ç–∏–≤–∞—Ç–æ—Ä –æ—Ñ—á–µ–π–Ω-—É—Ä–æ–≤–Ω–µ–π (SL on TP, SL protect)
        run_with_delay(
            run_bybit_activator,
            "BYBIT_ACTIVATOR",
            start_delay=BYBIT_ACTIVATOR_START_DELAY_SEC,
        ),
        # –∞—É–¥–∏—Ç–æ—Ä –∫–æ–Ω–≤–µ—Ä–≥–µ–Ω—Ü–∏–∏ –ø–æ SL (order/position)
        run_with_delay(
            run_bybit_auditor,
            "BYBIT_AUDITOR",
            start_delay=BYBIT_AUDITOR_START_DELAY_SEC,
        ),
        # –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–π REST-—Ä–µ—Å–∏–Ω–∫ Bybit (–±–∞–ª–∞–Ω—Å –∏ –ø–æ–∑–∏—Ü–∏–∏)
        run_periodic(
            run_bybit_rest_resync_job,
            "BYBIT_RESYNC",
            start_delay=BYBIT_RESYNC_START_DELAY_SEC,
            interval=BYBIT_RESYNC_INTERVAL_SEC,
        ),
    )

# üî∏ –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ CLI
if __name__ == "__main__":
    try:
        asyncio.run(main())
    except Exception:
        log.exception("üí• –§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞")