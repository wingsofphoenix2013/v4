# strategies_v4_main.py ‚Äî –≥–ª–∞–≤–Ω—ã–π –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä –ø–æ–¥—Å–∏—Å—Ç–µ–º—ã —Å—Ç—Ä–∞—Ç–µ–≥–∏–π v4 (+ –≤–æ—Ä–∫–µ—Ä TRADER_INFORMER –±–µ–∑ —Ç—É–º–±–ª–µ—Ä–∞)

# üî∏ –ò–º–ø–æ—Ä—Ç—ã
import asyncio
import logging

from infra import setup_logging, setup_pg, setup_redis_client, listen_indicator_stream, init_indicator_cache_via_redis
from config_loader import init_config_state, config_event_listener, listen_strategy_update_stream
from strategy_loader import load_strategies
from position_state_loader import load_position_state
from signal_processor import run_signal_loop, set_strategy_registry
from position_opener import run_position_opener_loop
from position_handler import run_position_handler
from core_io import run_signal_log_writer, run_position_open_writer, run_position_update_writer
from strategies_v4_cleaner import run_strategies_v4_cleaner
from lab_response_router import run_lab_response_router
from trader_informer import run_trader_informer  # –Ω–æ–≤—ã–π –≤–æ—Ä–∫–µ—Ä –º–≥–Ω–æ–≤–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (positions_bybit_status)

# üî∏ –õ–æ–≥–≥–µ—Ä –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
log = logging.getLogger("STRATEGY_MAIN")

# üî∏ –û–±—ë—Ä—Ç–∫–∞ —Å –∞–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º –¥–ª—è –≤–æ—Ä–∫–µ—Ä–æ–≤
async def run_safe_loop(coro_factory, label: str):
    while True:
        try:
            log.info(f"[{label}] –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏")
            await coro_factory()
        except Exception:
            log.exception(f"[{label}] ‚ùå –£–ø–∞–ª —Å –æ—à–∏–±–∫–æ–π ‚Äî –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥")
            await asyncio.sleep(5)

# üî∏ –ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞
async def main():
    setup_logging()
    log.info("üì¶ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã —Å—Ç—Ä–∞—Ç–µ–≥–∏–π v4")

    # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–Ω–µ—à–Ω–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
    try:
        await setup_pg()
        await setup_redis_client()
        await init_indicator_cache_via_redis()
    except Exception:
        log.exception("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤–Ω–µ—à–Ω–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤")
        return

    # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    try:
        await init_config_state()
        log.info("üß© –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
    except Exception:
        log.exception("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        return

    # –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π
    try:
        await load_position_state()
        log.info("üì¶ –ü–æ–∑–∏—Ü–∏–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏–∑ –ë–î")
    except Exception:
        log.exception("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ–∑–∏—Ü–∏–π")
        return

    # –∑–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π
    try:
        strategy_registry = load_strategies()
        set_strategy_registry(strategy_registry)
        log.info("üß† –†–µ–≥–∏—Å—Ç—Ä —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –∑–∞–≥—Ä—É–∂–µ–Ω")
    except Exception:
        log.exception("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π")
        return

    log.info("üöÄ –ó–∞–ø—É—Å–∫ asyncio-–≤–æ—Ä–∫–µ—Ä–æ–≤")
    log.info("üì¢ TRADER_INFORMER –≤–∫–ª—é—á–µ–Ω (stream=positions_bybit_status)")

    await asyncio.gather(
        # –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω–≤–µ–π–µ—Ä
        run_safe_loop(run_signal_loop, "SIGNAL_PROCESSOR"),
        run_safe_loop(config_event_listener, "CONFIG_LOADER"),
        run_safe_loop(run_signal_log_writer, "CORE_IO"),
        run_safe_loop(listen_indicator_stream, "INDICATOR_CACHE"),
        run_safe_loop(run_position_opener_loop, "POSITION_OPENER"),
        run_safe_loop(run_position_open_writer, "POSITION_DB_WRITER"),
        run_safe_loop(run_position_handler, "POSITION_HANDLER"),
        run_safe_loop(run_position_update_writer, "POSITION_UPDATE_WRITER"),
        run_safe_loop(listen_strategy_update_stream, "STRATEGY_STREAM"),
        run_safe_loop(run_strategies_v4_cleaner, "STRATEGY_CLEANER"),
        run_safe_loop(run_lab_response_router, "LAB_RESP_ROUTER"),
        run_safe_loop(run_trader_informer, "TRADER_INFORMER"),
    )

# üî∏ –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ CLI
if __name__ == "__main__":
    try:
        asyncio.run(main())
    except Exception:
        log.exception("üí• –§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞")