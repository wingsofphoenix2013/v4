# position_handler.py

import asyncio
import logging
from position_state_loader import position_registry

# üî∏ –õ–æ–≥–≥–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø–æ–∑–∏—Ü–∏–π
log = logging.getLogger("POSITION_HANDLER")


# üî∏ –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤—Å–µ—Ö –ø–æ–∑–∏—Ü–∏–π
async def run_position_monitor_loop():
    log.info("‚úÖ [POSITION_HANDLER] –¶–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø–æ–∑–∏—Ü–∏–π –∑–∞–ø—É—â–µ–Ω")
    while True:
        try:
            for position in list(position_registry.values()):
                asyncio.create_task(process_position(position))
            await asyncio.sleep(1)
        except Exception as e:
            log.exception("‚ùå [POSITION_HANDLER] –û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ")


# üî∏ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–¥–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏ –ø–æ–¥ lock
async def process_position(position):
    async with position.lock:
        log.info(f"üîí [POSITION_HANDLER] LOCK: –ø–æ–∑–∏—Ü–∏—è {position.uid}")
        await check_tp(position)
        await check_sl(position)
        await check_protect(position)


# üîπ –ó–∞–≥–ª—É—à–∫–∞: –ø—Ä–æ–≤–µ—Ä–∫–∞ TP
async def check_tp(position):
    log.info(f"[TP] –ü–æ–∑–∏—Ü–∏—è {position.uid}: –ø—Ä–æ–≤–µ—Ä–∫–∞ TP (–∑–∞–≥–ª—É—à–∫–∞)")


# üîπ –ó–∞–≥–ª—É—à–∫–∞: –ø—Ä–æ–≤–µ—Ä–∫–∞ SL
async def check_sl(position):
    log.info(f"[SL] –ü–æ–∑–∏—Ü–∏—è {position.uid}: –ø—Ä–æ–≤–µ—Ä–∫–∞ SL (–∑–∞–≥–ª—É—à–∫–∞)")


# üîπ –ó–∞–≥–ª—É—à–∫–∞: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—â–∏—Ç–Ω–æ–≥–æ SL
async def check_protect(position):
    log.info(f"[PROTECT] –ü–æ–∑–∏—Ü–∏—è {position.uid}: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—â–∏—Ç—ã (–∑–∞–≥–ª—É—à–∫–∞)")