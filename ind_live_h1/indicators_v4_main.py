# indicators_v4_main.py ‚Äî —É–ø—Ä–∞–≤–ª—è—é—â–∏–π –º–æ–¥—É–ª—å: –∫–æ–Ω—Ñ–∏–≥ —á–µ—Ä–µ–∑ Pub/Sub + h1 sequencer (LIVE‚ÜíMW), –±–µ–∑ —Å—Ç—Ä–∏–º–æ–≤/PG-–∑–∞–ø–∏—Å–µ–π

# üî∏ –ò–º–ø–æ—Ä—Ç—ã
import asyncio
import logging

from infra import init_pg_pool, init_redis_client, setup_logging, run_safe_loop
from ind_live_config import IndLiveConfig
from h1_sequencer import run_h1_sequencer


# üî∏ –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
async def main():
    setup_logging()
    log = logging.getLogger("MAIN")
    log.debug("ind_live_v4: —Å—Ç–∞—Ä—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞ (SEQ_H1)")

    # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
    pg = await init_pg_pool()
    redis = await init_redis_client()

    # –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: –∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–∏–∫–µ—Ä—ã/–∏–Ω—Å—Ç–∞–Ω—Å—ã + L1-–∫—ç—à
    config = IndLiveConfig(pg, redis)
    await config.initialize()

    # –∑–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á:
    #  - –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ Pub/Sub (—Ç–∏–∫–µ—Ä—ã/–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã) –æ–±–Ω–æ–≤–ª—è—é—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ –ø–∞–º—è—Ç–∏
    #  - —Å–µ–∫–≤–µ–Ω—Å–æ—Ä h1 –¥–µ–ª–∞–µ—Ç LIVE ‚Üí –ø–∞—É–∑–∞ ‚Üí MW ‚Üí –ø–∞—É–∑–∞, –∏—Å–ø–æ–ª—å–∑—É—è L1
    await asyncio.gather(
        run_safe_loop(config.run_ticker_events, "CFG_TICKERS"),
        run_safe_loop(config.run_indicator_events, "CFG_INDICATORS"),
        run_safe_loop(
            lambda: run_h1_sequencer(
                pg,
                redis,
                config.get_instances_by_tf,
                config.get_precision,
                config.get_active_symbols,
                config.live_cache,
            ),
            "SEQ_H1",
        ),
    )


# üî∏ –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    asyncio.run(main())