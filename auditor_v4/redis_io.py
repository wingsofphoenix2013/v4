import logging
import infra

log = logging.getLogger("REDIS_IO")

RETENTION_MS = 5184000000  # 60 –¥–Ω–µ–π

# üî∏ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ RETENTION –¥–ª—è –≤—Å–µ—Ö Redis TS –∫–ª—é—á–µ–π
async def update_retention_for_all_ts_keys():
    try:
        keys = await infra.redis_client.keys("ts:*:*:*")
        log.info(f"üîç –ù–∞–π–¥–µ–Ω–æ –∫–ª—é—á–µ–π: {len(keys)}")

        updated = 0
        for key in keys:
            try:
                await infra.redis_client.execute_command("TS.ALTER", key, "RETENTION", RETENTION_MS)
                log.info(f"‚úÖ –û–±–Ω–æ–≤–ª—ë–Ω: {key}")
                updated += 1
            except Exception as e:
                log.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –Ω–∞ {key}: {e}")

        log.info(f"üèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–æ: –æ–±–Ω–æ–≤–ª–µ–Ω–æ {updated} –∏–∑ {len(keys)} –∫–ª—é—á–µ–π")

    except Exception:
        log.exception("‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ Redis TS retention")

# üî∏ –û–±—ë—Ä—Ç–∫–∞ –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤ main
async def redis_task():
    await update_retention_for_all_ts_keys()