# king_marker_worker.py

import logging
from datetime import datetime

import asyncpg
import pandas as pd

import infra

log = logging.getLogger("KING_MARKER")


# üî∏ –í–æ—Ä–∫–µ—Ä –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–∑–∏—Ü–∏–π, –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø—Ä–∏ –ö–æ—Ä–æ–ª–µ (dry-run)
async def run_king_marker_worker():
    log.info("[KING_MARKER] üîÅ –ó–∞–ø—É—Å–∫ dry-run –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–∑–∏—Ü–∏–π")

    # üîπ –ü–æ–ª—É—á–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è ts_recorded
    query_min_ts = "SELECT MIN(ts_recorded) FROM strategies_active_v4"

    async with infra.pg_pool.acquire() as conn:
        min_ts = await conn.fetchval(query_min_ts)

    if min_ts is None:
        log.warning("[KING_MARKER] ‚ùó –ù–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏ –ö–æ—Ä–æ–ª–µ–π ‚Äî –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞")
        return

    # üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –ö–æ—Ä–æ–ª–µ–π —Å next_ts
    query_kings = """
        SELECT
            strategy_id,
            ts_recorded,
            LEAD(ts_recorded) OVER (ORDER BY ts_recorded) AS next_ts
        FROM strategies_active_v4
        ORDER BY ts_recorded
    """

    # üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–µ–ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –ö–æ—Ä–æ–ª—è
    query_positions = """
        SELECT id, strategy_id, created_at
        FROM positions_v4
        WHERE king_checked = false
          AND created_at >= $1
        ORDER BY created_at
        LIMIT 1000
    """

    async with infra.pg_pool.acquire() as conn:
        kings = await conn.fetch(query_kings)
        positions = await conn.fetch(query_positions, min_ts)

    if not positions:
        log.info("[KING_MARKER] ‚úÖ –ù–µ—Ç –Ω–æ–≤—ã—Ö –ø–æ–∑–∏—Ü–∏–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
        return

    # üîπ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ DataFrame
    df_kings = pd.DataFrame(kings, columns=["strategy_id", "ts_recorded", "next_ts"])
    df_pos = pd.DataFrame(positions, columns=["id", "strategy_id", "created_at"])
    df_pos["created_at"] = pd.to_datetime(df_pos["created_at"])
    df_kings["ts_recorded"] = pd.to_datetime(df_kings["ts_recorded"])
    df_kings["next_ts"] = pd.to_datetime(df_kings["next_ts"])

    matched = 0
    unmatched = 0

    for row in df_pos.itertuples():
        pos_time = row.created_at
        matched_king = df_kings[
            (df_kings["ts_recorded"] <= pos_time) &
            ((df_kings["next_ts"].isna()) | (pos_time < df_kings["next_ts"]))
        ]

        if not matched_king.empty:
            king_id = matched_king.iloc[0]["strategy_id"]
            log.info(f"[KING_MARKER] ‚úÖ –ü–æ–∑–∏—Ü–∏—è {row.id} ‚Äî –æ—Ç–∫—Ä—ã—Ç–∞ –ø—Ä–∏ –ö–æ—Ä–æ–ª–µ {king_id}")
            matched += 1
        else:
            log.info(f"[KING_MARKER] ‚ö†Ô∏è –ü–æ–∑–∏—Ü–∏—è {row.id} ‚Äî –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç –Ω–∏ —Å –æ–¥–Ω–∏–º –ö–æ—Ä–æ–ª—ë–º")
            unmatched += 1

    log.info(f"[KING_MARKER] üßæ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {len(df_pos)} –ø–æ–∑–∏—Ü–∏–π, {matched} —Å–æ–≤–ø–∞–ª–∏, {unmatched} –±–µ–∑ –ö–æ—Ä–æ–ª—è")