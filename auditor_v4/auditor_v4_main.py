import asyncio
import logging

from infra import (
    setup_logging,
    setup_pg,
    setup_redis_client,
)
from config_loader import (
    load_enabled_tickers,
    load_enabled_strategies,
    load_enabled_indicators,
    config_event_listener,
)
from core_io import pg_task, finmonitor_task, treasury_task
from ohlcv_auditor import run_audit_all_symbols, fix_missing_candles
from redis_io import run_audit_all_symbols_ts, fix_missing_ts_points
from redis_compare import compare_redis_vs_db_once
# from strategy_rating_worker import run_strategy_rating_worker
# from king_marker_worker import run_king_marker_worker

# üî∏ –õ–æ–≥–≥–µ—Ä –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
log = logging.getLogger("AUDITOR_MAIN")


# üî∏ –û–±—ë—Ä—Ç–∫–∞ —Å –∞–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º –¥–ª—è –≤–æ—Ä–∫–µ—Ä–æ–≤
async def run_safe_loop(coro, label: str):
    while True:
        try:
            log.info(f"[{label}] –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏")
            await coro()
        except Exception:
            log.exception(f"[{label}] ‚ùå –£–ø–∞–ª —Å –æ—à–∏–±–∫–æ–π ‚Äî –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥")
            await asyncio.sleep(5)

# üî∏ –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –æ–±—ë—Ä—Ç–∫–∞ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –º–µ–∂–¥—É —Ü–∏–∫–ª–∞–º–∏
async def loop_with_interval(coro_func, label: str, interval_sec: int, initial_delay: int = 0):
    if initial_delay > 0:
        log.info(f"[{label}] ‚è≥ –ü–µ—Ä–≤–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ {initial_delay} —Å–µ–∫ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º")
        await asyncio.sleep(initial_delay)

    while True:
        try:
            log.info(f"[{label}] ‚è≥ –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏")
            await coro_func()
            log.info(f"[{label}] ‚è∏ –°–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ {interval_sec} —Å–µ–∫")
            await asyncio.sleep(interval_sec)
        except Exception:
            log.exception(f"[{label}] ‚ùå –û—à–∏–±–∫–∞ ‚Äî –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥")
            await asyncio.sleep(5)
            
# üî∏ –ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞
async def main():
    setup_logging()
    log.info("üì¶ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ auditor_v4")

    try:
        await setup_pg()
        await setup_redis_client()
        log.info("üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è PG –∏ Redis –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
    except Exception:
        log.exception("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤–Ω–µ—à–Ω–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤")
        return
        
    try:
        await load_enabled_tickers()
        await load_enabled_strategies()
        await load_enabled_indicators()
        log.info("üì¶ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ç–∏–∫–µ—Ä–æ–≤, —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
    except Exception:
        log.exception("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—á–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        return

    log.info("üöÄ –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤—ã—Ö –≤–æ—Ä–∫–µ—Ä–æ–≤")

    await asyncio.gather(
#         run_safe_loop(redis_task, "REDIS_RETENTION_UPDATER")
        run_safe_loop(pg_task, "CORE_IO"),
        run_safe_loop(config_event_listener, "CONFIG_LOADER"),
        run_safe_loop(finmonitor_task, "FINMONITOR"),
        run_safe_loop(treasury_task, "TREASURY"),
        loop_with_interval(run_audit_all_symbols, "OHLCV_AUDITOR", 3600),
        loop_with_interval(fix_missing_candles, "OHLCV_FIXER", 300, initial_delay=180),
        loop_with_interval(run_audit_all_symbols_ts, "REDIS_TS_AUDITOR", 3600, initial_delay=300),
        loop_with_interval(fix_missing_ts_points, "REDIS_TS_FIXER", 3600, initial_delay=420),
        loop_with_interval(compare_redis_vs_db_once, "REDIS_DB_COMPARE", 3600, initial_delay=90),
#         loop_with_interval(run_strategy_rating_worker, "STRATEGY_RATER", 300),
#         loop_with_interval(run_king_marker_worker, "KING_MARKER", 300, initial_delay=120)
    )

if __name__ == "__main__":
    asyncio.run(main())