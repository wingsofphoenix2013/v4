# oracle_rsibins_snapshot_backfill.py ‚Äî RSI-bins backfill: –≠—Ç–∞–ø A (–∫–∞—Ä–∫–∞—Å, –≤—ã–±–æ—Ä–∫–∞ uid'–æ–≤ –±–∞—Ç—á–∞–º–∏ –ø–æ 200)

import os
import asyncio
import logging

import infra

log = logging.getLogger("ORACLE_RSIBINS_BF")

# üî∏ –ö–æ–Ω—Ñ–∏–≥ backfill'–∞
BATCH_SIZE        = int(os.getenv("RSI_BF_BATCH_SIZE", "200"))     # —Ä–∞–∑–º–µ—Ä –ø–∞—á–∫–∏ UID'–æ–≤
MAX_CONCURRENCY   = int(os.getenv("RSI_BF_MAX_CONCURRENCY", "8"))  # –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞ —Å–ª–µ–¥. —ç—Ç–∞–ø
SLEEP_MS          = int(os.getenv("RSI_BF_SLEEP_MS", "200"))       # –ø–∞—É–∑–∞ –º–µ–∂–¥—É –ø—É—Å—Ç—ã–º–∏ –≤—ã–±–æ—Ä–∫–∞–º–∏

# üî∏ SQL –≤—ã–±–æ—Ä–∫–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ (–∑–∞–∫—Ä—ã—Ç—ã–µ, rsi_checked=false, –≤–∞–ª–∏–¥–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏)
_CANDIDATES_SQL = """
SELECT p.position_uid
FROM positions_v4 p
JOIN strategies_v4 s ON s.id = p.strategy_id
WHERE p.status = 'closed'
  AND COALESCE(p.rsi_checked, false) = false
  AND s.enabled = true
  AND COALESCE(s.market_watcher, false) = true
ORDER BY p.closed_at NULLS LAST, p.id
LIMIT $1
"""

# üî∏ –í—ã–±—Ä–∞—Ç—å –ø–∞—á–∫—É UID'–æ–≤ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
async def _fetch_candidates(batch_size: int):
    pg = infra.pg_pool
    async with pg.acquire() as conn:
        rows = await conn.fetch(_CANDIDATES_SQL, batch_size)
    return [r["position_uid"] for r in rows]

# üî∏ –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª backfill'–∞ (–≠—Ç–∞–ø A: —Ç–æ–ª—å–∫–æ –ø–ª–∞–Ω, –±–µ–∑ –æ–±—Ä–∞–±–æ—Ç–∫–∏)
async def run_oracle_rsibins_snapshot_backfill():
    log.info("üöÄ RSI-BINS BF: —Å—Ç–∞—Ä—Ç, batch=%d, sleep=%dms", BATCH_SIZE, SLEEP_MS)
    while True:
        try:
            uids = await _fetch_candidates(BATCH_SIZE)
            if not uids:
                # –Ω–µ—Ç –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ ‚Äî –∫–æ—Ä–æ—Ç–∫–∏–π —Å–æ–Ω –∏ –ø–æ–≤—Ç–æ—Ä
                await asyncio.sleep(SLEEP_MS / 1000)
                continue

            # –ù–∞ –≠—Ç–∞–ø–µ A ‚Äî —Ç–æ–ª—å–∫–æ –ª–æ–≥–∏—Ä—É–µ–º –ø–ª–∞–Ω; –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–æ–±–∞–≤–∏–º –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ
            log.info("[RSI-BINS BF] planned uids=%d (–ø—Ä–∏–º–µ—Ä: %s)", len(uids), uids[:3])

            # –°–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø –¥–æ–±–∞–≤–∏—Ç —Ñ–∞–∫—Ç–∏—á–µ—Å–∫—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É —ç—Ç–∏—Ö UID'–æ–≤

        except asyncio.CancelledError:
            log.info("‚èπÔ∏è RSI-BINS backfill –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            raise
        except Exception as e:
            log.exception("‚ùå RSI-BINS BF loop error: %s", e)
            await asyncio.sleep(1)