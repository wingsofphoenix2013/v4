# feed_stream_maintenance.py ‚Äî —Ä–µ–≥—É–ª—è—Ä–Ω–∞—è —á–∏—Å—Ç–∫–∞ Redis Streams

import asyncio
import logging

log = logging.getLogger("STREAM_MAINT")

# üî∏ —á–∏—Å—Ç–∏–º —Ç–æ–ª—å–∫–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –≤ –º–æ–¥—É–ª–µ —Å—Ç—Ä–∏–º—ã + —Ä–∞–∑—É–º–Ω—ã–µ –ª–∏–º–∏—Ç—ã —Ö–≤–æ—Å—Ç–∞
STREAM_LIMITS = {
    "ohlcv_stream": 20_000,         # ~1.5 —Å—É—Ç–æ–∫ –±—É—Ñ–µ—Ä–∞ –ø—Ä–∏ —Ç–µ–∫—É—â–µ–º —Ç—Ä–∞—Ñ–∏–∫–µ
    "pg_candle_inserted": 10_000,   # —Ç—Ä–∏–≥–≥–µ—Ä—ã –∞—É–¥–∏—Ç–æ—Ä–∞
    "tickers_status_stream": 5_000, # —Å–æ–±—ã—Ç–∏—è –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è —Ç–∏–∫–µ—Ä–æ–≤
}

INTERVAL_SECONDS = 60  # –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å —á–∏—Å—Ç–∫–∏

async def run_stream_maintenance(redis):
    log.info("STREAM_MAINT –∑–∞–ø—É—â–µ–Ω (XTRIM –ø–æ —Å—Ç—Ä–∏–º–∞–º)")
    while True:
        try:
            for key, maxlen in STREAM_LIMITS.items():
                try:
                    # MAXLEN ~ N ‚Äî –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–µ–∑–∫–∞ (–±—ã—Å—Ç—Ä–∞—è)
                    trimmed = await redis.execute_command("XTRIM", key, "MAXLEN", "~", maxlen)
                    log.debug(f"[{key}] XTRIM –¥–æ ~{maxlen}, —É–¥–∞–ª–µ–Ω–æ ~{trimmed}")
                except Exception as e:
                    log.warning(f"[{key}] XTRIM –æ—à–∏–±–∫–∞: {e}")
            await asyncio.sleep(INTERVAL_SECONDS)
        except Exception as e:
            log.error(f"STREAM_MAINT –æ—à–∏–±–∫–∞: {e}", exc_info=True)
            await asyncio.sleep(2)