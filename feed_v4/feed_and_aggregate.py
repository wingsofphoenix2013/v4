# feed_and_aggregate.py ‚Äî –ø—Ä–∏—ë–º –∏ –∞–≥—Ä–µ–≥–∞—Ü–∏—è —Ä—ã–Ω–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö

import logging

# üî∏ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–∏–∫–µ—Ä–æ–≤ —Å —Ç–æ—á–Ω–æ—Å—Ç—å—é –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è –∏–∑ PostgreSQL
async def load_active_tickers(pg_pool):
    async with pg_pool.acquire() as conn:
        rows = await conn.fetch("""
            SELECT symbol, precision_price
            FROM tickers_v4
            WHERE status = 'enabled'
        """)
        return {row['symbol']: row['precision_price'] for row in rows}

# üî∏ –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
async def run_feed_and_aggregator(pg, redis):
    log = logging.getLogger("FEED")

    # –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–∏–∫–µ—Ä–æ–≤
    tickers = await load_active_tickers(pg)
    log.info(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ç–∏–∫–µ—Ä–æ–≤: {len(tickers)} ‚Üí {list(tickers.keys())}")

    # –ó–∞–≥–ª—É—à–∫–∞ ‚Äî —Ü–∏–∫–ª –æ–∂–∏–¥–∞–Ω–∏—è
    while True:
        await asyncio.sleep(5)