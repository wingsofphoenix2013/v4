# bb_stream_maintenance.py ‚Äî —Ä–µ–≥—É–ª—è—Ä–Ω–∞—è —á–∏—Å—Ç–∫–∞ Redis Streams (bb:*)

# üî∏ –ò–º–ø–æ—Ä—Ç—ã –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
import asyncio
import logging

log = logging.getLogger("BB_STREAM_MAINT")

# üî∏ –õ–∏–º–∏—Ç—ã —Ö–≤–æ—Å—Ç–æ–≤ —Å—Ç—Ä–∏–º–æ–≤ (–º–æ–∂–µ—à—å –º–µ–Ω—è—Ç—å –ø–æ–∑–∂–µ —á–µ—Ä–µ–∑ –∫–æ–¥/ENV)
STREAM_LIMITS = {
    "bb:ohlcv_stream":        20_000,  # –∑–∞–∫—Ä—ã—Ç—ã–µ –±–∞—Ä—ã
    "bb:pg_candle_inserted":  10_000,  # —Ç—Ä–∏–≥–≥–µ—Ä—ã –∞—É–¥–∏—Ç–æ—Ä–∞
    "bb:tickers_status_stream": 5_000, # —Å–æ–±—ã—Ç–∏—è –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è —Ç–∏–∫–µ—Ä–æ–≤ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å)
}

INTERVAL_SECONDS = 60  # –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å —á–∏—Å—Ç–∫–∏

# üî∏ –í–æ—Ä–∫–µ—Ä XTRIM –ø–æ —Å—Ç—Ä–∏–º–∞–º bb:*
async def run_stream_maintenance_bb(redis):
    log.info("BB_STREAM_MAINT –∑–∞–ø—É—â–µ–Ω (XTRIM bb:*)")
    while True:
        try:
            for key, maxlen in STREAM_LIMITS.items():
                try:
                    trimmed = await redis.execute_command("XTRIM", key, "MAXLEN", "~", maxlen)
                    log.debug(f"[{key}] XTRIM –¥–æ ~{maxlen}, —É–¥–∞–ª–µ–Ω–æ ~{trimmed}")
                except Exception as e:
                    log.warning(f"[{key}] XTRIM –æ—à–∏–±–∫–∞: {e}")
            await asyncio.sleep(INTERVAL_SECONDS)
        except Exception as e:
            log.error(f"BB_STREAM_MAINT –æ—à–∏–±–∫–∞: {e}", exc_info=True)
            await asyncio.sleep(2)