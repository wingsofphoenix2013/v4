# üî∏ laboratory_v4_main.py ‚Äî entrypoint laboratory_v4: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è, –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥–æ–≤, –∑–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤—ã—Ö –≤–æ—Ä–∫–µ—Ä–æ–≤

# üî∏ –ò–º–ø–æ—Ä—Ç—ã
import asyncio
import logging

from laboratory_infra import (
    setup_logging,
    setup_pg,
    setup_redis_client,
)
from laboratory_config import (
    load_initial_config,
    lists_stream_listener,
    config_event_listener,
)

# üî∏ –∏–º–ø–æ—Ä—Ç –≤–æ—Ä–∫–µ—Ä–∞ ¬´—Å–æ–≤–µ—Ç—á–∏–∫–∞¬ª
from laboratory_decision_maker import run_laboratory_decision_maker

# üî∏ –õ–æ–≥–≥–µ—Ä
log = logging.getLogger("LAB_MAIN")

# üî∏ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞ –≤–æ—Ä–∫–µ—Ä–æ–≤
# –∑–∞–¥–µ—Ä–∂–∫–∏ –ø–µ—Ä–µ–¥ –ø–µ—Ä–≤—ã–º —Å—Ç–∞—Ä—Ç–æ–º (—Å–µ–∫) ‚Äî –º–æ–∂–Ω–æ –ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
INITIAL_DELAY_LISTS = 0
INITIAL_DELAY_CONFIG = 0
INITIAL_DELAY_DECISION = 0
# –ø—Ä–∏–º–µ—Ä –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á (—Å–µ–∫) ‚Äî –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–µ–π—á–∞—Å
DEFAULT_INTERVAL_SEC = 6 * 60 * 60


# üî∏ –û–±—ë—Ä—Ç–∫–∞ —Å –∞–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º –≤–æ—Ä–∫–µ—Ä–∞
async def run_safe_loop(coro, label: str):
    while True:
        try:
            log.info(f"[{label}] üöÄ –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏")
            await coro()
        except asyncio.CancelledError:
            log.info(f"[{label}] ‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ —Å–∏–≥–Ω–∞–ª—É")
            raise
        except Exception:
            log.exception(f"[{label}] ‚ùå –£–ø–∞–ª —Å –æ—à–∏–±–∫–æ–π ‚Äî –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥")
            await asyncio.sleep(5)


# üî∏ –û–±—ë—Ä—Ç–∫–∞ –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
async def run_periodic(coro_func, interval_sec: int, label: str, initial_delay: int = 0):
    if initial_delay > 0:
        log.info(f"[{label}] ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ {initial_delay} —Å–µ–∫ –ø–µ—Ä–µ–¥ –ø–µ—Ä–≤—ã–º –∑–∞–ø—É—Å–∫–æ–º")
        await asyncio.sleep(initial_delay)
    while True:
        try:
            log.info(f"[{label}] üîÅ –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫")
            await coro_func()
        except asyncio.CancelledError:
            log.info(f"[{label}] ‚èπÔ∏è –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –∑–∞–¥–∞—á–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            raise
        except Exception:
            log.exception(f"[{label}] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏")
        await asyncio.sleep(int(interval_sec))


# üî∏ –ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞
async def main():
    setup_logging()
    log.info("üì¶ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ laboratory_v4")

    # –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≤–Ω–µ—à–Ω–∏–º —Å–µ—Ä–≤–∏—Å–∞–º
    try:
        await setup_pg()
        await setup_redis_client()
        log.info("üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL –∏ Redis –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
    except Exception:
        log.exception("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤–Ω–µ—à–Ω–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤")
        return

    # –ø–µ—Ä–≤–∏—á–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    try:
        await load_initial_config()
        log.info("üì¶ –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
    except Exception:
        log.exception("‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–≤–∏—á–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        return

    log.info("üöÄ –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤—ã—Ö –≤–æ—Ä–∫–µ—Ä–æ–≤ laboratory_v4")

    # —Å–ª—É—à–∞—Ç–µ–ª–∏: —Å–ø–∏—Å–∫–∏ (Streams) –∏ –∫–æ–Ω—Ñ–∏–≥–∏ (Pub/Sub)
    await asyncio.gather(
        # —Å–ª—É—à–∞—Ç–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π WL/BL –∏–∑ oracle (Redis Streams)
        run_safe_loop(
            lambda: _start_with_delay(lists_stream_listener, INITIAL_DELAY_LISTS),
            "LAB_LISTS_STREAMS",
        ),
        # —Å–ª—É—à–∞—Ç–µ–ª—å —Å–æ–±—ã—Ç–∏–π –∫–æ–Ω—Ñ–∏–≥–æ–≤ (Pub/Sub —Ç–∏–∫–µ—Ä–æ–≤/—Å—Ç—Ä–∞—Ç–µ–≥–∏–π)
        run_safe_loop(
            lambda: _start_with_delay(config_event_listener, INITIAL_DELAY_CONFIG),
            "LAB_CONFIG_PUBSUB",
        ),
        # ¬´—Å–æ–≤–µ—Ç—á–∏–∫¬ª: –∑–∞–ø—Ä–æ—Å ‚Üí —Ä–µ—à–µ–Ω–∏–µ ‚Üí –æ—Ç–≤–µ—Ç –≤ —Å—Ç—Ä–∏–º ‚Üí –∑–∞–ø–∏—Å—å –≤ –ë–î
        run_safe_loop(
            lambda: _start_with_delay(run_laboratory_decision_maker, INITIAL_DELAY_DECISION),
            "LAB_DECISION",
        ),
    )


# üî∏ –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
async def _start_with_delay(coro_func, delay_sec: int):
    # —É—Å–ª–æ–≤–∏—è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç–∏
    if delay_sec and delay_sec > 0:
        log.info("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ %d —Å–µ–∫ –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º –∑–∞–¥–∞—á–∏", delay_sec)
        await asyncio.sleep(int(delay_sec))
    # –∑–∞–ø—É—Å–∫ —Ü–µ–ª–µ–≤–æ–π –∫–æ—Ä—É—Ç–∏–Ω—ã
    await coro_func()


# üî∏ –ó–∞–ø—É—Å–∫ –º–æ–¥—É–ª—è
if __name__ == "__main__":
    asyncio.run(main())