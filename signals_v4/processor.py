import logging
from infra import ENABLED_SIGNALS, ENABLED_TICKERS, ENABLED_STRATEGIES

# üî∏ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–¥–Ω–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞ –∏–∑ Redis Stream
async def process_signal(data: dict):
    log = logging.getLogger("PROCESSOR")

    symbol = data.get("symbol")
    message = data.get("message")

    if not symbol or not message:
        log.warning(f"–ü—Ä–æ–ø—É—â–µ–Ω —Å–∏–≥–Ω–∞–ª –±–µ–∑ symbol/message: {data}")
        return

    # üîç –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    direction = None
    signal_id = None
    for sid, phrases in ENABLED_SIGNALS.items():
        if message == phrases["long"]:
            direction = "long"
            signal_id = sid
            break
        elif message == phrases["short"]:
            direction = "short"
            signal_id = sid
            break

    if not direction:
        log.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∞: {message}")
        return

    # üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω–æ–≥–æ —Ç–∏–∫–µ—Ä–∞
    if symbol not in ENABLED_TICKERS:
        log.warning(f"–¢–∏–∫–µ—Ä {symbol} –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ ENABLED_TICKERS ‚Äî —Å–∏–≥–Ω–∞–ª –æ—Ç–∫–ª–æ–Ω—ë–Ω")
        return

    # üîç –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π
    matched_strategies = []
    for strategy_id, strategy in ENABLED_STRATEGIES.items():
        if strategy["signal_id"] != signal_id:
            continue
        if strategy["allow_open"] or strategy["reverse"]:
            matched_strategies.append(strategy_id)

    if not matched_strategies:
        log.info(f"–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –¥–ª—è —Å–∏–≥–Ω–∞–ª–∞: {symbol} | {direction}")
        return

    log.info(f"–°–∏–≥–Ω–∞–ª –ø—Ä–∏–Ω—è—Ç –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {symbol} | {direction} | signal_id={signal_id} | —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏: {matched_strategies}")