import logging
import os
import asyncpg
import redis.asyncio as redis

# üî∏ –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
DEBUG_MODE = os.getenv("DEBUG_MODE", "false").lower() == "true"
DATABASE_URL = os.getenv("DATABASE_URL")
REDIS_URL = os.getenv("REDIS_URL", "redis://localhost:6379")

# üî∏ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
def setup_logging():
    level = logging.DEBUG if DEBUG_MODE else logging.INFO
    logging.basicConfig(
        level=level,
        format="%(asctime)s | %(levelname)-8s | %(name)s | %(message)s",
        datefmt="%Y-%m-%d %H:%M:%S"
    )

# üî∏ Redis –∏ PostgreSQL –∫–ª–∏–µ–Ω—Ç—ã
REDIS = None
PG_POOL = None

# üî∏ In-memory —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏
ENABLED_TICKERS = {}
ENABLED_SIGNALS = {}
ENABLED_STRATEGIES = {}

# üî∏ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Redis
async def init_redis_client():
    global REDIS
    REDIS = redis.from_url(REDIS_URL, decode_responses=True)

# üî∏ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PostgreSQL –ø—É–ª–∞
async def init_pg_pool():
    global PG_POOL
    log = logging.getLogger("PG_INIT")
    log.info("–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL")
    PG_POOL = await asyncpg.create_pool(
        DATABASE_URL,
        min_size=10,
        max_size=20
    )
    log.info("PG_POOL —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")